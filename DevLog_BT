DevLog for Rambler
Brendan Thompson
==============================

==============================
========== 04/03/18 ==========
==============================

I) === Summary: ===
	A) Got launchURL in NotificationOpenHandler
	B) Used launchURL in MainActivity

II) === Takeaways: ===

	- Fully Functioning Push Notifications

III) === Resources: ===

	- Example getting launchURL from Intent: https://github.com/OneSignal/OneSignal-Android-SDK/blob/master/Examples/AndroidStudio/app/src/main/java/com/onesignal/example/GreenActivity.java
	- Example getting launchURL from notification: https://github.com/OneSignal/OneSignal-Android-SDK/blob/master/Examples/AndroidStudio/app/src/main/java/com/onesignal/example/ExampleApplication.java

IV) === Log: ===

A) Got launchURL in NotificationOpenHandler
	- https://github.com/OneSignal/OneSignal-Android-SDK/blob/master/Examples/AndroidStudio/app/src/main/java/com/onesignal/example/ExampleApplication.java
	- launchURL was a separate field in the notification payload
	- Passing to MainActivity as an Extra on the intent
	`
	// Handles what happens when a notification is fired (tapped on)
    class NotificationOpenHandler implements OneSignal.NotificationOpenedHandler {
        private static final String TAG = "NotificationOpenHandler";

        @Override
        public void notificationOpened(OSNotificationOpenResult result) {

            // Get Data passed with Notification
//            OSNotificationAction.ActionType actionType = result.action.type;
//            JSONObject data = result.notification.payload.additionalData;
//            String dataFromNotification;

            // Get LaunchURL
            String launchURL = result.notification.payload.launchURL;
            Log.d(TAG, launchURL);

            // Create Intent
            Intent intent = new Intent(getApplicationContext(), MainActivity.class);
            intent.putExtra("launchURL", launchURL); // Add launchURL as extra
            startActivity(intent);
        }
    }
    `

B) Used launchURL in MainActivity
	- https://github.com/OneSignal/OneSignal-Android-SDK/blob/master/Examples/AndroidStudio/app/src/main/java/com/onesignal/example/GreenActivity.java
		`
		// Get URL to open in WebView
        String launchURL;
        if (getIntent().getStringExtra("launchURL") != null) {
            // launchURL from Notification: https://github.com/OneSignal/OneSignal-Android-SDK/blob/master/Examples/AndroidStudio/app/src/main/java/com/onesignal/example/GreenActivity.java
            launchURL = getIntent().getStringExtra("launchURL");
        } else {
            launchURL = "https://www.transyrambler.com/"; // Official Site URL
			// myWebView.loadUrl("http://ggt.bf8.myftpupload.com/"); // Staging Site URL
        }
        Log.d(TAG, launchURL);
        `

==============================
========== 04/02/18 ==========
==============================

I) === Summary: ===
	A) Switched to OneSignal push notifications
	B) Registered the devices with OneSignal
	C) Overwrote NotificationOpenedHandler

II) === Takeaways: ===

	- Getting the push notifications, handling what happens when it is opened, but not finding the launchURL

III) === Resources: ===

	- OneSignal Android Setup: https://documentation.onesignal.com/docs/android-sdk-setup#section-android-studio

IV) === Log: ===

A) Switched to OneSignal push notifications
	- Switched the plugin on WordPress to OneSignal
	- Configured on Website & on Plugin

B) Registered the devices with OneSignal
	- https://documentation.onesignal.com/docs/android-sdk-setup#section-android-studio
	- brought in dependencies to build.gradle files
		`
		plugins {
		    id 'com.onesignal.androidsdk.onesignal-gradle-plugin' version '0.8.1'
		}
		apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'

		repositories {
		    maven { url 'https://maven.google.com' }
		}
		`
	- Initialized the app with OneSignal in ApplicationClass
		`
        OneSignal.startInit(this)
                .inFocusDisplaying(OneSignal.OSInFocusDisplayOption.Notification)
                .unsubscribeWhenNotificationsAreDisabled(true)
                .setNotificationOpenedHandler(new NotificationOpenHandler())
                .init();
        `

C) Overwrote NotificationOpenedHandler in ApplicationClass
	- Not getting any data (looking for launchURL)
		`class NotificationOpenHandler implements OneSignal.NotificationOpenedHandler {
	        // This fires when a notification is opened by tapping on it.
	        private static final String TAG = "NotificationOpenHandler";

	        @Override
	        public void notificationOpened(OSNotificationOpenResult result) {
	            OSNotificationAction.ActionType actionType = result.action.type;
	            JSONObject data = result.notification.payload.additionalData;
	            String dataFromNotification;

	            //String stationName = data.optString("stationName");
	            //String timestamp = data.optString("timestamp");
	            //String filename = data.optString("filename");
	//            String url = getString(R.string.callResourceUrl) + filename;
	            //Log.d(TAG, data.toString());

	            // Get Data from notification
	            if (data != null) {
	                dataFromNotification = data.optString("dataFromNotification", null);
	                if (dataFromNotification != null){
	                    Log.d(TAG, "dataFromNotification set with value: " + dataFromNotification);

	                    // Add data as extra to intent https://stackoverflow.com/questions/29866450/how-to-send-data-back-to-mainactivity
	//                    intent.putExtra("dataFromNotification", dataFromNotification);
	                } else {
	                    Log.d(TAG, "No dataFromNotification");
	                }
	            } else {
	                Log.d(TAG, "No Data");
	            }

	            Intent intent = new Intent(getApplicationContext(), MainActivity.class);
				// intent.putExtra("url", url);
	            startActivity(intent);
	        }

	    }
	    `


==============================
========== 03/03/18 ==========
==============================

I) === Summary: ===
	A) Struggling to get push Notifications when new posts are made
	B) Hypothesized possible Push Notification issues
	C) Changed Status bar color to same as Toolbar

II) === Takeaways: ===

	- Not receiving the Push Notification when new posts received
		- See part B

III) === Resources: ===

A) Delite Studio
	- Configuring Android Push Notifications: https://www.delitestudio.com/wordpress/push-notifications-for-wordpress/configuring-android-push-notifications/
	- FAQ: https://www.delitestudio.com/wordpress/push-notifications-for-wordpress/faqs/
	- Documentation: https://www.delitestudio.com/wordpress/push-notifications-for-wordpress/documentation/

IV) === Log: ===

A) Continued trying to subscribe to Push Notification Plugin API
	1) Firebase sends the notifications fine
	2) Added FirebaseDeviceRegistration as a Service
		- now it is in the right place but still isn't registering with the plugin
	3) Found a different Server Key on Firebase to use with the plugin
		- "Legacy Server Key": AIzaSyBA0x9f7aOUKcK7dn16h39uo1F6HYkU9vM
			- also referred to as Web API Key
		- "Server Key": AAAA1x34GAk:APA91bFQucale_QEiB1pz1zT_A35SvmTFRAK7nc-69q_IS6tTVQLeHZl0Xwc-nu8o75QDNbW0nW5KfH-ge1nH6_ftphgh5cWKzMY_z5oANSkHbfczMRExPVgej84nx-lRSYB1e8a6btT
	4) Switched back and forth between using the "Notification Message" and the "Data Message"
		- Notification Message = Firebase Cloud Messaging automatically displays the message to end-user devices on behalf of the client app
			- This would be ideal and should be automatic
		- Data Message = Client app is responsible for processing data messages
			- We should be set up to handle this
		- From the plugin's FAQ: "When I send a notification from Firebase console everything works properly, while when I send them from the plugin nothing is received. What should I do?"
			- "With the Notification message Firebase automatically displays the message to end-user devices on behalf of the client app. With the Data message client app is responsible for processing data messages."
			- "You can enable Notification messages in the Settings → Android → Firebase enabling Use the Notification message instead of the Data message"
			- https://www.delitestudio.com/wordpress/push-notifications-for-wordpress/faqs/
		- It definitely looks like "Notification Message" should work automatically without a handler

B) Possible Push Notification issues
	1) App must be registered with the plugin
		a) since we are using FCM and a Server key we shouldn't need to do this (See part 2)
		b) The "Configuring Android Push Notifications" tutorial from Delite Studio does not mention anything about registering
			- https://www.delitestudio.com/wordpress/push-notifications-for-wordpress/configuring-android-push-notifications/
		c) The "Documentation" from Delite Studios says to connect the App using the Register API
			- https://www.delitestudio.com/wordpress/push-notifications-for-wordpress/documentation/
			- could this be specifically for the paid version?
		d) The FirebaseDeviceRegistration service I wrote to send the POST request to the API doesn't appear to be working
			- Url: http://dk5.151.myftpupload.com/pnfw/register/
			- Perhaps it won't work because it is a staging site?
			- Once it works the phone should appear in the Plugin interface under the "Tokens" section
		E) Perhaps I need to create a different class specifically for this, but based off the comments when connecting to Firebase I think the FirebaseInstanceIdService is exactly the place to do it
	2) Plugin isn't communicating with Firebase
		a) Since we are sending a notification message, Firebase Cloud Messaging (FCM) should handle showing the notification on the device on behalf of the app
		b) Neither Server Key appears to be working
			- "Legacy Server Key": AIzaSyBA0x9f7aOUKcK7dn16h39uo1F6HYkU9vM
				- also referred to as Web API Key
			- "Server Key": AAAA1x34GAk:APA91bFQucale_QEiB1pz1zT_A35SvmTFRAK7nc-69q_IS6tTVQLeHZl0Xwc-nu8o75QDNbW0nW5KfH-ge1nH6_ftphgh5cWKzMY_z5oANSkHbfczMRExPVgej84nx-lRSYB1e8a6btT
	3) Notifications wont be sent if the app is running in the background
		- I tested sending notifications with the emulator & the phone running the app in the foreground

C) Changed Status bar color to same as Toolbar
	- although inspecting the website returned #303030, in the emulator they are the same color when the status bar is #202020
	- Had to change the "Dark" version of the primary color
		- Res > colors.xml > colorPrimaryDark


==============================
========== 03/01/18 ==========
==============================

I) === Summary: ===
	A) Started syncing Wordpress plugin with Firebase
	B) Renamed App
	C) Set app icon
	D) Set colors
	E) Registered App with API

II) === Takeaways: ===
	- Push Notifications are a lot harder than expected
		A) Just syncing the API key hasn't worked with test posts
			- https://www.delitestudio.com/wordpress/push-notifications-for-wordpress/configuring-android-push-notifications/
		B) trying to POST to the API to subscribe has been a pain
			- https://www.delitestudio.com/wordpress/push-notifications-for-wordpress/documentation/#appsubscribers
			- Current Issue: "Warning:(23, 14) The `<service> FirebaseDeviceRegistration` is not registered in the manifest"
	- Still looks possible to setup category subscriptions for notifications
		- On WordPress -> Push Notifications -> General -> "Categories Filterable by App Subscribers"
			a) Categories (category)
			b) Tags (post_tag)
			c) Format (post_format)
			d) Photo Gallery (bwg_tag)

III) === Resources: ===

	- My Old DevLog: https://github.com/brenthompson2/Rambler_Android/blob/bt_layout_prototype_sidenav/DevLog

IV) === Log: ===

A) Started syncing Wordpress plugin with Firebase
	1) Get Web API Key from Firebase
		- Project Overview -> Settings for the app -> General
		- AlzaSyAnGpizXSy1arufbBFUCpzjJKg7b3CFwsU
	2) Setup Android Notifications
		A) Push Notifications -> General
			- check "Send Push Notifications"
			- check "Send Push Notifications for Posts"
			** This is where it looks like subscribers can be filtered
		B) Push Notifications -> Android
		- Check "send push notifications to Android devices"
		- Add Server Key from A.1
	3) Doesn't appear to have worked

B) Renamed App
	- AndroidManifest.xml
	- android:label="@string/app_name"
	- res > values > styles.xml
	- <string name="app_name">Rambler</string>
	- had to clean up modules.xml

C) Set app icon
	- copied over all of the folders from the OG project
	- res > drawable > mipmap-*

D) Set colors
    <color name="colorPrimary">#9D2336</color>
    <color name="colorPrimaryDark">#8D1E2F</color>
    <color name="colorPrimaryLight">#CE2C45</color>
    <color name="colorSecondary">#DFD1A8</color>
    <color name="colorTertiary">#C4BFB5</color>
    <color name="colorOffBlack">#303030</color>
    <color name="colorAccent">#DFD1A8</color>

E) Registered App with API using Http Post
	1) Created Post Request sender
		- Post Request: https://stackoverflow.com/questions/42767249/android-post-request-with-json
		- Making JSON object: https://stackoverflow.com/questions/34681158/write-json-to-a-file
		- import URL, HttpURLConnection, DataOutputStream, JSONObject, JSONException
	B) Added FirebaseDeviceRegistration.java to manifest
		- https://firebase.google.com/docs/cloud-messaging/android/start/
		- "Warning:(23, 14) The `<service> FirebaseDeviceRegistration` is not registered in the manifest"

==============================
========== 02/28/18 ==========
==============================

I) === Summary: ===
	A) Emulated New Project on Linux
	B) Added Firebase to the App
	C) Register devices with the Firebase console
	D) Created Message Handler
	E) Displayed Push Notification

II) === Takeaways: ===

	- To get push notifications the app needs to register with Firebase Cloud Messaging and also have a Message Handler. Then the plugin sends the notification to the web API telling Firebase to send the message
	- Firebase messages are coming through

III) === Resources: ===

- Resetting head locally and remotely
	- https://ncona.com/2011/07/how-to-delete-a-commit-in-git-local-and-remote/
	- https://stackoverflow.com/questions/29616173/how-to-reset-to-my-last-commit-in-android-studio

IV) === Log: ===

A) Emulated New Project on Linux
	- File -> New -> Project from Version Control -> GitHub
	- Used URL and set destination folder
	- Error: “android studio please select android sdk”
		- https://stackoverflow.com/questions/34353220/android-studio-please-select-android-sdk
		- Fix: Tools -> Android -> Sync Project with Gradle Files

B) Added Firebase to the App
	- Tools -> Firebase -> Cloud Messaging -> Set up cloud messaging
		1) Connect to Firebase -> Choose an existing Firebase or Google project -> Transylvania Rambler
		2) Add FCM to your app -> accept changes
			- adds dependencies to build.gradle & app/build.gradle

C) Register devices with the Firebase console
	- Right click on "java" in project inspector -> New -> java class
	- FirebaseDeviceRegistration.java
	- Inherit from FirebaseInstanceIdService
	- copied content from old project
	- had to import FirebaseInstanceId & Log

D) Created Message Handler
	- Right click on "app" in project inspector -> new -> service -> service
	- FirebaseMessageHandler
	- Copied content from old project
	- had to import RemoteMessage & Log

E) Displayed Push Notification
	- https://medium.com/@nileshsingh/how-to-add-push-notification-capability-to-your-android-app-a3cac745e56e
	`
	void showNotifications(String title, String msg){
        Intent intent = new Intent(this, MainActivity.class);
        PendingIntent pendingIntent = PendingIntent.getActivity(this, REQUEST_CODE, intent, PendingIntent.FLAG_UPDATE_CURRENT);

        Notification notification = new NotificationCompat.Builder(this)
                .setContentText(msg)
                .setContentTitle(title)
                .setContentIntent(pendingIntent)
                .setSmallIcon(R.mipmap.ic_launcher_round)
                .build();

        NotificationManager manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
        manager.notify(NOTIFICATION_ID, notification);
    }
	`
	- NOTIFICATION_ID & REQUEST_CODE are both private members of the class
	`
	private static final int REQUEST_CODE = 1;
    private static final int NOTIFICATION_ID = 6578;
    `